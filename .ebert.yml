# Protip: colons break grep, if matching a colon use [:] instead of :
engines:
  grep:
    enabled: true
    config:
      patterns:
        todo-left:
          pattern: (TODO|TO-DO)
          annotation: "TODO left in code."
          path_patterns:
            - "**/*.X68"
          categories:
            - "Bug Risk"
        bad-movem:
          pattern: (MOVEM\.(B|W|L)\s+-\(SP\),)|(MOVEM\.(B|W|L)\s+[A-Z0-9\/\-]+,\(SP\)\+)
          annotation: "INVALID MOVEM. Make sure MOVEM has either (SP)+,registers or register,-(SP)"
          path_patterns:
            - "**/*.X68"
          categories:
            - "Bug Risk"
        toobig_add:
          pattern: ADD\.(B|W|L)\s+#[0-8],
          annotation: "Use ADDQ for constants 1-8"
          path_patterns:
            - "**/*.X68"
          categories:
            - "Performance"
        toobig_sub:
          pattern: SUB\.(B|W|L)\s+#[0-8],
          annotation: "Use SUBQ for constants 1-8"
          path_patterns:
            - "**/*.X68"
          categories:
            - "Performance"
        lowercase_label1:
          pattern: ^[A-Z][a-z:]+
          annotation: "Make sure all labels are uppercase."
          path_patterns:
            - "**/*.X68"
          categories:
            - "Style"
        lowercase_label2:
          pattern: ^[a-z:]+
          annotation: "Make sure all labels are uppercase."
          path_patterns:
            - "**/*.X68"
          categories:
            - "Style"
        label_start:
          pattern: ^\s+(\.|[A-Za-z_\.])+[:]
          annotation: "Make sure all labels start at the beginning of the line."
          path_patterns:
            - "**/*.X68"
          categories:
            - "Style"
            - "Bug Risk"
        divorced_label:
          pattern: ^[A-Z\._]+[:]\s+$
          annotation: "Make sure all labels have code on the same line. Don't put labels between empty lines."
          path_patterns:
            - "**/*.X68"
          categories:
            - "Bug Risk"
        buggy_move:
          pattern: MOVE\.L\s+#(0|1|2|3|4|5|6|7|8|9|10|11|12|13|14|15|16|17|18|19|20|21|22|23|24|25|26|27|28|29|30|31),D(0|1|2|3|4|5|6|7)
          annotation: "A MOVE.L operation with direct data going into a data register with the direct data being less than 5 bits causes the EASY68k to perform a MOVEQ instead of a MOVE.L"
          path_patterns:
            - "**/*.X68"
          categories:
            - "Compatibility"
        incorrect_move:
          pattern: MOVE\.(W|L)\s+A(0|1|2|3|4|5|6),A(0|1|2|3|4|5|6)
          annotation: "If you're moving an address register to another address register, use MOVEA"
          path_patterns:
            - "**/*.X68"
          categories:
            - "Compatibility"
        incorrect_version:
          pattern: (AND|CMP|SUB|ADD)\.(B|W|L)\s+#($|%)?[0-9]+,
          annotation: "If the source is data, use the immediate opcode instead of the regular version."
          path_patterns:
            - "**/*.X68"
          categories:
            - "Compatibility"
        missing_size:
          pattern: (EXG|MOVE|MOVEM|CLR|SUB|ADD|CMP|CMPI|MULU|DIVU|MULS|DIVS|AND|OR|EOR)\s
          annotation: "Op-Code is missing a size operator."
          path_patterns:
            - "**/*.X68"
          categories:
            - "Bug Risk"
        invalid_trap:
          pattern: TRAP\s+#(?!15)
          annotation: "Not allowed to use any trap function other than #15"
          path_patterns:
            - "**/*.X68"
          categories:
            - "Security"